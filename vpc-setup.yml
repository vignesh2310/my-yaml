- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: import vpc variables 
      include_vars: vars/vpc_vars.txt

    - name: create my vpc
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{state}}"
      register: vpcout  

    - debug:
        var: vpcout  

    - name: create public subnet 1 in zone 1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{pubsub1cidr}}"
        map_public: yes
        tags:
          name: mypubsub1
      register: pubsub1_out    

    - name: create public subnet 2 in zone 2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{pubsub2cidr}}"
        map_public: yes
        tags:
          name: mypubsub2
      register: pubsub2_out 

    - name: create public subnet 3 in zone 3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{pubsub3cidr}}"
        map_public: yes
        tags:
          name: mypubsub3
      register: pubsub3_out 

    - name: create pvt subnet 1 in zone 1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{pvtsub1cidr}}"
        map_public: yes
        tags:
          name: mypvtsub1
      register: pvtsub1_out 

    - name: create pvt subnet 2 in zone 2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{pvtsub2cidr}}"
        map_public: yes
        tags:
          name: mypvtsub2
      register: pvtsub2_out    

    - name: create pvt subnet 3 in zone 3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{pvtsub3cidr}}"
        map_public: yes
        tags:
          name: mypvtsub3
      register: pvtsub3_out    

    - name: adding igw setup
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        tags:
          name: my_igw
      register: igw_out

    - name: route table for public subnet
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          name: my_pub_rt
        subnets:
          - "{{pubsub1_out.subnet.id}}"
          - "{{pubsub2_out.subnet.id}}"
          - "{{pubsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_out.gateway_id}}"
      register: pubrt_out

    - name: create nat gateway and allocate elastic ip if nat gw exists dont create
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{pubsub1_out.subnet.id}}"    
        wait: yes
        region: "{{region}}"
        if_exist_do_not_create: yes
      register: natgw_out

    - name: pvt subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          name: my_pvt_rt
        subnets:
          - "{{pvtsub1_out.subnet.id}}"
          - "{{pvtsub2_out.subnet.id}}"
          - "{{pvtsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{natgw_out.nat_gateway_id}}"
      register: pvtrt_out   

    - debug:
        var: "{{item}}"
      loop:
        -  vpcout.vpc.id
        -  pubsub1_out.subnet.id
        -  pubsub2_out.subnet.id
        -  pubsub3_out.subnet.id
        -  pvtsub1_out.subnet.id
        -  pvtsub2_out.subnet.id
        -  pvtsub3_out.subnet.id         
        -  igw_out.gateway_id
        -  natgw_out.nat_gateway_id
        -  pubrt_out.route_table.id
        -  pvtrt_out.route_table.id

    - set_fact:
        vpcid: "{{vpcout.vpc.id}}"
        pubsub1id: "{{ pubsub1_out.subnet.id }}"
        pubsub2id: "{{ pubsub2_out.subnet.id }}"
        pubsub3id: "{{ pubsub3_out.subnet.id }}"
        pvtsub1id: "{{ pvtsub1_out.subnet.id }}"
        pvtsub2id: "{{ pvtsub2_out.subnet.id }}"
        pvtsub3id: "{{ pvtsub3_out.subnet.id }}"
        igwid: "{{ igw_out.gateway_id }}"
        pubrtid: "{{ pubrt_out.route_table.id }}"
        natgwid: "{{ natgw_out.nat_gateway_id }}"
        pvtrtid: "{{ pvtrt_out.route_table.id }}"
        cacheable: yes

    - name: create variables for vpc output
      copy:
        content: "region: {{region}}\nvpcid: {{vpcout.vpc.id}}\npubsub1id: {{ pubsub1_out.subnet.id }}\npubsub2id: {{ pubsub2_out.subnet.id }}\npubsub3id: {{ pubsub3_out.subnet.id }}\npvtsub1id: {{ pvtsub1_out.subnet.id }}\npvtsub2id: {{ pvtsub2_out.subnet.id }}\npvtsub3id: {{ pvtsub3_out.subnet.id }}\nigwid: {{ igw_out.gateway_id }}\npubrtid: {{ pubrt_out.route_table.id }}\nnatgwid: {{ natgw_out.nat_gateway_id }}\npvtrtid: {{ pvtrt_out.route_table.id }}\n" 
        dest: vars/output_vars
        

    

        